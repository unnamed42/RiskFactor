version: "2"

services:
  spring:
    build:
      context: backend
    command: sh -c '/init/wait-for db:3306 -- java -jar /app/app.jar'
    expose:
      - "8090"
    restart: always
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/riskfactor?createDatabaseIfNotExist=true&useSSL=false
    volumes:
      - ./init:/init:ro
      - ./init/m2:/root/.m2
    networks:
      - database
      - webserver
  react:
    image: node:12.13.0-alpine
    working_dir: /app
    command: sh -c 'yarn install && yarn run start'
    expose:
      - "8080"
    restart: always
    volumes:
      - ./frontend:/app:rw
    networks:
      - webserver
  web:
    image: nginx:1.17.0-alpine
    command: ["nginx", "-g", "daemon off;"]
    restart: always
    depends_on:
      - spring
      - react
    ports:
      - "5980:80"
    expose:
      - "80"
    volumes:
      - ./init/nginx:/etc/nginx:ro
    networks:
      - webserver
  db:
    image: mysql/mysql-server:8.0.13
    restart: always
    command: ["--default-authentication-plugin=mysql_native_password", "--log-bin-trust-function-creators=ON"]
    environment:
      - MYSQL_DATABASE=riskfactor
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "3306:3306"
    expose:
      - "3306"
    volumes:
      - storage:/var/lib/mysql
    networks:
      - database

volumes:
  storage:

networks:
  database:
  webserver:
