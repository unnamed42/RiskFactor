import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
  ext {
    kotlinVersion = '1.3.50'
    springBootVersion = '2.2.0.RELEASE'
  }
  repositories {
    jcenter()
  }
//   repositories {
//     maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
//   }
  dependencies {
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
    classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion")
    classpath("org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion")
    classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
  }
}

// allprojects {
//   repositories {
//     maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
//   }
// }

apply plugin: 'kotlin'
apply plugin: "kotlin-spring"
apply plugin: "kotlin-jpa"
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = "com.tjh.riskfactor"
version = "0.0.1-SNAPSHOT"
targetCompatibility = 11

tasks.withType(KotlinCompile) {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}

repositories {
  jcenter()
}

test {
  useJUnitPlatform()
}

dependencies {
  implementation("org.springframework.boot:spring-boot-starter-web")
  implementation("org.springframework.boot:spring-boot-starter-security")
  implementation("org.springframework.boot:spring-boot-starter-data-jpa")
  compileOnly("org.springframework.boot:spring-boot-configuration-processor")
  runtimeOnly("org.springframework.boot:spring-boot-devtools")
  // jdbc
  runtimeOnly("mysql:mysql-connector-java:8.0.13")
  // logging wrapper
  implementation("io.github.microutils:kotlin-logging:1.7.7")
  // kotlin
  implementation("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion")
  implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
  implementation("org.jetbrains.kotlin:kotlin-reflect")
  // jackson
  implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
  implementation("com.fasterxml.jackson.datatype:jackson-datatype-hibernate5")
  implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml")
  // Excel xls xlsx
  compileOnly("org.apache.poi:poi:4.1.1")
  runtimeOnly("org.apache.poi:poi-ooxml:4.1.1")
  // json web token
  compileOnly("io.jsonwebtoken:jjwt-api:0.10.7")
  runtimeOnly("io.jsonwebtoken:jjwt-impl:0.10.7")
  runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.10.7")

  testImplementation("org.springframework.boot:spring-boot-starter-test") {
    // 排除 junit 4
    exclude group: "junit", module: "junit"
    // 不需要 junit 4 兼容
    exclude group: "org.junit.vintage", module: "junit-vintage-engine"
  }
  testCompileOnly("org.junit.jupiter:junit-jupiter-api")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
  testImplementation("org.junit.platform:junit-platform-launcher")
  testImplementation("org.mockito:mockito-junit-jupiter")
}
